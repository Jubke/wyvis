class ImplementationsController < ApplicationController
  before_action :set_implementation, only: [:show, :frame, :edit, :update, :destroy]
  before_action :set_associations, only: [:show, :frame]
  
  # GET /scenarios/1/implementations/new
  def new
    @scenario = Scenario.find(params[:scenario_id])
    @implementation = @scenario.implementations.new
  end

  # GET /implementations/1
  # GET /implementations/1.json
  def show
    gon.implementations = [impl_to_json(@implementation)]
  end

  # GET /implementations/compare/:id/:id_2
  def compare
    @implementations = Implementation.find( params[:id_1], params[:id_2] )
    @scenarios = []
    @libraries = []
    gon.implementations = []
    @implementations.each do |impl|
      gon.implementations << impl_to_json(impl)
      @scenarios << impl.scenario
      @libraries << impl.library
    end

    render layout: 'application_fluid'
  end

  # GET /implmentations/1/frame
  def frame
    render layout: 'frame'
  end

  # GET /implmentations/1/edit
  def edit
  end

  # POST /scenarios/1/implementations
  # POST /scenarios/1/implementations.json
  def create
    @scenario = Scenario.find(params[:scenario_id])
    @implementation = Implementation.new(implementation_params)
    @implementation.scenario_id = params[:scenario_id]

    respond_to do |format|
      if @implementation.save
        format.html { redirect_to @scenario, notice: 'Implementation was successfully created.' }
      else
        format.html { render :new }
      end
    end
  end

    # PATCH/PUT /implmentations/1
  # PATCH/PUT /implementations/1.json
  def update
    respond_to do |format|
      if @implementation.update(implementation_params)
        format.html { redirect_to @implementation, notice: 'Scenario was successfully updated.' }
        format.json { render :show, status: :ok, location: @implementation }
      else
        format.html { render :edit }
        format.json { render json: @implementation.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /implementations/1
  # DELETE /implementations/1.json
  def destroy
    @scenario = @implementation.scenario
    @implementation.destroy
    respond_to do |format|
      format.html { redirect_to scenario, notice: 'Implementation was successfully destroyed.' }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_implementation
      @implementation = Implementation.find(params[:id])
    end

    def set_associations
      @scenario = @implementation.scenario
      @library = @implementation.library
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def implementation_params
      params.require(:implementation).permit(:library_id, :javascript, :stylesheet)
    end

    def impl_to_json(impl)
      impl.to_json(
        :include => [
          :scenario,
          :library
        ]
      )
    end
end
